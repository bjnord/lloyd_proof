<?xml version="1.0" encoding="UTF-8"?>
<project name="LloydProofCustom" default="help">

    <target name="quality" depends="pmd,findbugs,jdepend"/>

    <!--  ==========  PMD  ==========  -->

    <path id="pmd.classpath">
        <fileset dir="${pmd.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="pmd">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
                classpathref="pmd.classpath"/>
        <pmd shortFilenames="true"
                rulesetfiles="pmd-rulesets/my-java-optimizations.xml,pmd-rulesets/my-java-junit.xml,pmd-rulesets/my-java-naming.xml">
            <formatter type="html" toFile="${quality.dir}/pmd_my_report.html"/>
            <fileset dir="src/">
                <include name="net/nordist/lloydproof/*.java"/>
            </fileset>
            <fileset dir="tests/src/">
                <include name="net/nordist/lloydproof/*.java"/>
            </fileset>
        </pmd>
        <pmd shortFilenames="true">
            <ruleset>java-android</ruleset>
            <ruleset>java-basic</ruleset>
            <ruleset>java-braces</ruleset>
            <ruleset>java-codesize</ruleset>
            <ruleset>java-comments</ruleset>
            <!-- ruleset>java-coupling</ruleset -->
            <ruleset>java-empty</ruleset>
            <ruleset>java-finalizers</ruleset>
            <ruleset>java-imports</ruleset>
            <!-- java-junit included in "custom" group, above -->
            <ruleset>java-logging-java</ruleset>
            <!-- java-naming included in "custom" group, above -->
            <!-- java-optimizations included in "custom" group, above -->
            <ruleset>java-strictexception</ruleset>
            <ruleset>java-strings</ruleset>
            <ruleset>java-typeresolution</ruleset>
            <ruleset>java-unnecessary</ruleset>
            <ruleset>java-unusedcode</ruleset>
            <formatter type="html" toFile="${quality.dir}/pmd_report.html"/>
            <fileset dir="src/">
                <include name="net/nordist/lloydproof/*.java"/>
            </fileset>
            <fileset dir="tests/src/">
                <include name="net/nordist/lloydproof/*.java"/>
            </fileset>
        </pmd>
    </target>

    <!--  ==========  FindBugs  ==========  -->

    <property name="findbugs-report" value="${quality.dir}/findbugs_report.html" />
    <property name="package-to-analyse" value="net.nordist.lloydproof.*" />

    <path id="findbugs.dir.jars">
        <fileset dir="${findbugs.home}/lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.dir.jars"/>

    <target name="findbugs">
        <gettarget
             androidJarFileOut="project.target.android.jar"
             androidAidlFileOut="project.target.framework.aidl"
             bootClassPathOut="project.target.class.path"
             targetApiOut="project.target.apilevel"
             minSdkVersionOut="project.minSdkVersion" />
        <dependency
             libraryFolderPathOut="project.library.folder.path"
             libraryPackagesOut="project.library.packages"
             libraryManifestFilePathOut="project.library.manifest.file.path"
             libraryResFolderPathOut="project.library.res.folder.path"
             libraryBinAidlFolderPathOut="project.library.bin.aidl.folder.path"
             libraryNativeFolderPathOut="project.library.native.folder.path"
             jarLibraryPathOut="project.all.jars.path"
             targetApi="${project.target.apilevel}"
             verbose="${verbose}" />
        <findbugs home="${findbugs.home}" output="html"
                outputFile="${findbugs-report}"
                onlyAnalyze="${package-to-analyse}"
                excludeFilter="findbugs-exclude.xml">
            <sourcePath path="${source.dir}" />
            <class location="${out.dir}" />
            <auxClasspath>
                <pathelement location="${project.target.android.jar}" />
                <pathelement location="${findbugs.rmi.jar}" />
                <path refid="project.all.jars.path" />
            </auxClasspath>
        </findbugs>
    </target>

    <!--  ==========  JDepend  ==========  -->

    <path id="jdepend.classpath">
        <fileset dir="${jdepend.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="jdepend">
        <jdepend classpathref="jdepend.classpath" format="xml"
                outputfile="${quality.dir}/jdepend.xml">
            <exclude name="java.*"/>
            <exclude name="javax.*"/>
            <sourcespath>
                <pathelement location="${source.absolute.dir}" />
            </sourcespath>
            <classespath>
                <pathelement location="${out.classes.absolute.dir}" />
            </classespath>
        </jdepend>

        <xslt basedir="${quality.dir}" destdir="${quality.dir}"
              style="${ant.home}/etc/jdepend.xsl">
            <param name="project" expression="${ant.project.name}"/>
            <param name="today" expression="${DSTAMP}"/>
            <param name="company" expression="${company}"/>
            <mapper type="glob" from="jdepend.xml" to="jdepend_report.html"/>
        </xslt>
        <xslt basedir="${quality.dir}"
              destdir="${quality.dir}"
              includes="jdepend.xml"
              extension=".dot"
              style="jdepend2dot.xsl"/>
         <!-- need to define a path to Graphiz/dot path -->
         <apply executable="${graphviz.dot.bin}"
                dest="${quality.dir}"
                parallel="false">
             <arg value="-Tpng"/>
             <arg value="-o"/>
             <targetfile/>
             <srcfile/>
             <fileset dir="${quality.dir}" includes="*.dot"/>
             <mapper type="glob" from="*.dot" to="*.png"/>
         </apply>
    </target>

</project>
